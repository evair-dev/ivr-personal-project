"""adding_initial_models

Revision ID: 1827f4722bda
Revises: 930d0b79562f
Create Date: 2021-01-12 17:12:03.059346

"""
import sqlalchemy as sa
import sqlalchemy_fsm
from alembic import op
from sqlalchemy import Text
from sqlalchemy.dialects import postgresql
from sqlalchemy_utils.types.encrypted.encrypted_type import StringEncryptedType

from ivr_gateway.models.workflows import StepTreeType

# revision identifiers, used by Alembic.
revision = '1827f4722bda'
down_revision = '930d0b79562f'
branch_labels = None
depends_on = None

partner_enum = postgresql.ENUM('IVR', 'ELOAN', 'TD', 'REGIONS', 'HSBC', 'PNC', name='partner')
productcode_enum = postgresql.ENUM('CREDIT_CARD', 'LOAN', name='productcode')
department_enum = postgresql.ENUM('CUSTOMERS', 'ORIGINATIONS', 'PAYMENTS', 'ANY', name='department')
transfertype_enum = postgresql.ENUM('SIP', 'PSTN', name='transfertype')
adminrole_enum = postgresql.ENUM('admin', 'user', name='adminrole')


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('admin_call_from',
                    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
                    sa.Column('short_number', sa.String(), nullable=True),
                    sa.Column('full_number', sa.String(), nullable=False),
                    sa.Column('name', sa.String(), nullable=True),
                    sa.Column('customer', sa.String(), nullable=True),
                    sa.Column('created_at', sa.DateTime(), nullable=False),
                    sa.Column('updated_at', sa.DateTime(), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('admin_call_to',
                    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
                    sa.Column('short_number', sa.String(), nullable=True),
                    sa.Column('full_number', sa.String(), nullable=False),
                    sa.Column('name', sa.String(), nullable=True),
                    sa.Column('description', sa.String(), nullable=True),
                    sa.Column('created_at', sa.DateTime(), nullable=False),
                    sa.Column('updated_at', sa.DateTime(), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('admin_user',
                    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
                    sa.Column('name', sa.String(), nullable=False),
                    sa.Column('short_id', sa.String(), nullable=True),
                    sa.Column('pin', sa.String(), nullable=True),
                    sa.Column('role', adminrole_enum, nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=False),
                    sa.Column('updated_at', sa.DateTime(), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('greeting',
                    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
                    sa.Column('partner', partner_enum, nullable=True),
                    sa.Column('product_code', productcode_enum, nullable=True),
                    sa.Column('department', department_enum, nullable=True),
                    sa.Column('message', sa.String(), nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.Column('updated_at', sa.DateTime(), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('queue',
                    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
                    sa.Column('name', sa.String(), nullable=False),
                    sa.Column('active', sa.Boolean(), nullable=False),
                    sa.Column('timezone', sa.String(), nullable=False),
                    sa.Column('emergency_mode', sa.Boolean(), nullable=False),
                    sa.Column('emergency_message', sa.String(), nullable=True),
                    sa.Column('past_due_cents_amount', sa.Integer(), nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.Column('updated_at', sa.DateTime(), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_queue_name'), 'queue', ['name'], unique=True)
    op.create_table('step_run',
                    sa.Column('encryption_key_fingerprint', sa.String(), nullable=False),
                    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
                    sa.Column('name', sa.String(), nullable=False),
                    sa.Column('branch', sa.String(), nullable=False),
                    sa.Column('step_type', sa.String(), nullable=False),
                    sa.Column('initialization', StringEncryptedType(), nullable=True),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.Column('updated_at', sa.DateTime(), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_step_run_branch'), 'step_run', ['branch'], unique=False)
    op.create_index(op.f('ix_step_run_name'), 'step_run', ['name'], unique=False)
    op.create_table('workflow',
                    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
                    sa.Column('workflow_name', sa.String(), nullable=False),
                    sa.Column('external', sa.Boolean(), nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.Column('updated_at', sa.DateTime(), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_workflow_workflow_name'), 'workflow', ['workflow_name'], unique=True)
    op.create_table('admin_phone_number',
                    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
                    sa.Column('name', sa.String(), nullable=True),
                    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=True),
                    sa.Column('phone_number', sa.String(), nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=False),
                    sa.Column('updated_at', sa.DateTime(), nullable=False),
                    sa.ForeignKeyConstraint(['user_id'], ['admin_user.id'], ),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('phone_number')
                    )
    op.create_table('api_credential',
                    sa.Column('encryption_key_fingerprint', sa.String(), nullable=False),
                    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
                    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=False),
                    sa.Column('key', StringEncryptedType(), nullable=False),
                    sa.Column('secret', StringEncryptedType(), nullable=False),
                    sa.Column('active', sa.Boolean(), nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=False),
                    sa.ForeignKeyConstraint(['user_id'], ['admin_user.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('call_routing',
                    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
                    sa.Column('phone_number', sa.String(), nullable=True),
                    sa.Column('sip_trunk', sa.String(), nullable=True),
                    sa.Column('workflow_id', postgresql.UUID(as_uuid=True), nullable=True),
                    sa.Column('greeting_id', postgresql.UUID(as_uuid=True), nullable=False),
                    sa.Column('priority', sa.Integer(), nullable=False),
                    sa.Column('admin', sa.Boolean(), nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.Column('updated_at', sa.DateTime(), nullable=True),
                    sa.Column('active', sa.Boolean(), nullable=True),
                    sa.Column('operating_mode', sa.String(), nullable=False),
                    sa.Column('initial_queue_id', postgresql.UUID(as_uuid=True), nullable=True),
                    sa.ForeignKeyConstraint(['greeting_id'], ['greeting.id'], ),
                    sa.ForeignKeyConstraint(['initial_queue_id'], ['queue.id'], ),
                    sa.ForeignKeyConstraint(['workflow_id'], ['workflow.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_call_routing_phone_number'), 'call_routing', ['phone_number'], unique=False)
    op.create_index(op.f('ix_call_routing_sip_trunk'), 'call_routing', ['sip_trunk'], unique=False)
    op.create_table('queue_holiday',
                    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
                    sa.Column('queue_id', postgresql.UUID(as_uuid=True), nullable=False),
                    sa.Column('date', sa.Date(), nullable=False),
                    sa.Column('name', sa.String(), nullable=False),
                    sa.Column('message', sa.String(), nullable=True),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.Column('updated_at', sa.DateTime(), nullable=True),
                    sa.ForeignKeyConstraint(['queue_id'], ['queue.id'], ),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('queue_id', 'date',
                                        name='queue_holiday_one_holiday_for_queue_date_unique_constraint')
                    )
    op.create_table('queue_hours_of_operation',
                    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
                    sa.Column('queue_id', postgresql.UUID(as_uuid=True), nullable=False),
                    sa.Column('day_of_week', sa.Integer(), nullable=False),
                    sa.Column('start_time', sa.Time(), nullable=False),
                    sa.Column('end_time', sa.Time(), nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.Column('updated_at', sa.DateTime(), nullable=True),
                    sa.ForeignKeyConstraint(['queue_id'], ['queue.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('step_state',
                    sa.Column('encryption_key_fingerprint', sa.String(), nullable=False),
                    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
                    sa.Column('step_run_id', postgresql.UUID(as_uuid=True), nullable=False),
                    sa.Column('input', StringEncryptedType(), nullable=True),
                    sa.Column('result', StringEncryptedType(), nullable=True),
                    sa.Column('error', sa.Boolean(), nullable=False),
                    sa.Column('retryable', sa.Boolean(), nullable=True),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.Column('updated_at', sa.DateTime(), nullable=True),
                    sa.ForeignKeyConstraint(['step_run_id'], ['step_run.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('transfer_routing',
                    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
                    sa.Column('transfer_type', transfertype_enum, nullable=False),
                    sa.Column('destination', sa.String(), nullable=False),
                    sa.Column('destination_system', sa.String(), nullable=False),
                    sa.Column('queue_id', postgresql.UUID(as_uuid=True), nullable=False),
                    sa.Column('partner', partner_enum, nullable=True),
                    sa.Column('product_code', productcode_enum, nullable=True),
                    sa.Column('department', department_enum, nullable=True),
                    sa.Column('operating_mode', sa.String(), nullable=False),
                    sa.Column('priority', sa.Integer(), nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.Column('updated_at', sa.DateTime(), nullable=True),
                    sa.ForeignKeyConstraint(['queue_id'], ['queue.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('workflow_config',
                    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
                    sa.Column('workflow_id', postgresql.UUID(as_uuid=True), nullable=True),
                    sa.Column('step_tree', StepTreeType(astext_type=Text()), nullable=True),
                    sa.Column('step_tree_sha', sa.String(), nullable=True),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.Column('updated_at', sa.DateTime(), nullable=True),
                    sa.ForeignKeyConstraint(['workflow_id'], ['workflow.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('admin_call',
                    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
                    sa.Column('telephony_system', sa.String(), nullable=False),
                    sa.Column('telephony_system_id', sa.String(), nullable=False),
                    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=False),
                    sa.Column('ani', sa.String(), nullable=True),
                    sa.Column('dnis', sa.String(), nullable=True),
                    sa.Column('verified', sa.Boolean(), nullable=False),
                    sa.Column('original_ani', sa.String(), nullable=False),
                    sa.Column('original_dnis', sa.String(), nullable=False),
                    sa.Column('call_routing_id', postgresql.UUID(as_uuid=True), nullable=True),
                    sa.Column('created_at', sa.DateTime(), nullable=False),
                    sa.Column('updated_at', sa.DateTime(), nullable=False),
                    sa.ForeignKeyConstraint(['call_routing_id'], ['call_routing.id'], ),
                    sa.ForeignKeyConstraint(['user_id'], ['admin_user.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_admin_call_telephony_system_id'), 'admin_call', ['telephony_system_id'], unique=False)
    op.create_table('workflow_run',
                    sa.Column('encryption_key_fingerprint', sa.String(), nullable=False),
                    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
                    sa.Column('state', sqlalchemy_fsm.sqltypes.FSMField(), nullable=False),
                    sa.Column('workflow_id', postgresql.UUID(as_uuid=True), nullable=False),
                    sa.Column('workflow_config_id', postgresql.UUID(as_uuid=True), nullable=False),
                    sa.Column('current_queue_id', postgresql.UUID(as_uuid=True), nullable=True),
                    sa.Column('session', StringEncryptedType(), nullable=True),
                    sa.Column('current_step_branch_name', sa.String(), nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.Column('updated_at', sa.DateTime(), nullable=True),
                    sa.ForeignKeyConstraint(['current_queue_id'], ['queue.id'], ),
                    sa.ForeignKeyConstraint(['workflow_config_id'], ['workflow_config.id'], ondelete='CASCADE'),
                    sa.ForeignKeyConstraint(['workflow_id'], ['workflow.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_workflow_run_current_step_branch_name'), 'workflow_run', ['current_step_branch_name'],
                    unique=False)
    op.create_table('call',
                    sa.Column('encryption_key_fingerprint', sa.String(), nullable=False),
                    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
                    sa.Column('global_id', sa.String(), nullable=True),
                    sa.Column('customer_id', sa.String(), nullable=True),
                    sa.Column('secured', sa.DateTime(), nullable=True),
                    sa.Column('secured_key', sa.String(), nullable=True),
                    sa.Column('session', StringEncryptedType(), nullable=False),
                    sa.Column('admin_call_id', postgresql.UUID(as_uuid=True), nullable=True),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.Column('updated_at', sa.DateTime(), nullable=True),
                    sa.ForeignKeyConstraint(['admin_call_id'], ['admin_call.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_call_global_id'), 'call', ['global_id'], unique=False)
    op.create_table('scheduled_call',
                    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
                    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=False),
                    sa.Column('ani', sa.String(), nullable=True),
                    sa.Column('dnis', sa.String(), nullable=True),
                    sa.Column('admin_call_id', postgresql.UUID(as_uuid=True), nullable=True),
                    sa.Column('call_routing_id', postgresql.UUID(as_uuid=True), nullable=True),
                    sa.Column('created_at', sa.DateTime(), nullable=False),
                    sa.Column('updated_at', sa.DateTime(), nullable=False),
                    sa.ForeignKeyConstraint(['admin_call_id'], ['admin_call.id'], ),
                    sa.ForeignKeyConstraint(['call_routing_id'], ['call_routing.id'], ),
                    sa.ForeignKeyConstraint(['user_id'], ['admin_user.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('workflow_step_run',
                    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
                    sa.Column('workflow_run_id', postgresql.UUID(as_uuid=True), nullable=False),
                    sa.Column('step_run_id', postgresql.UUID(as_uuid=True), nullable=False),
                    sa.Column('run_order', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['step_run_id'], ['step_run.id'], ),
                    sa.ForeignKeyConstraint(['workflow_run_id'], ['workflow_run.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('call_leg',
                    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
                    sa.Column('call_id', postgresql.UUID(as_uuid=True), nullable=False),
                    sa.Column('call_routing_id', postgresql.UUID(as_uuid=True), nullable=True),
                    sa.Column('workflow_run_id', postgresql.UUID(as_uuid=True), nullable=True),
                    sa.Column('end_time', sa.DateTime(), nullable=True),
                    sa.Column('telephony_system', sa.String(), nullable=False),
                    sa.Column('telephony_system_id', sa.String(), nullable=False),
                    sa.Column('backend', sa.String(), nullable=False),
                    sa.Column('previous_call_legs', sa.String(), nullable=False),
                    sa.Column('ani', sa.String(), nullable=True),
                    sa.Column('dnis', sa.String(), nullable=True),
                    sa.Column('active', sa.Boolean(), nullable=True),
                    sa.Column('initial_queue_id', postgresql.UUID(as_uuid=True), nullable=True),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.Column('updated_at', sa.DateTime(), nullable=True),
                    sa.ForeignKeyConstraint(['call_id'], ['call.id'], ),
                    sa.ForeignKeyConstraint(['call_routing_id'], ['call_routing.id'], ),
                    sa.ForeignKeyConstraint(['initial_queue_id'], ['queue.id'], ),
                    sa.ForeignKeyConstraint(['workflow_run_id'], ['workflow_run.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_call_leg_telephony_system_id'), 'call_leg', ['telephony_system_id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_call_leg_telephony_system_id'), table_name='call_leg')
    op.drop_table('call_leg')
    op.drop_table('workflow_step_run')
    op.drop_table('scheduled_call')
    op.drop_index(op.f('ix_call_global_id'), table_name='call')
    op.drop_table('call')
    op.drop_index(op.f('ix_workflow_run_current_step_branch_name'), table_name='workflow_run')
    op.drop_table('workflow_run')
    op.drop_index(op.f('ix_admin_call_telephony_system_id'), table_name='admin_call')
    op.drop_table('admin_call')
    op.drop_table('workflow_config')
    op.drop_table('transfer_routing')
    op.drop_table('step_state')
    op.drop_table('queue_hours_of_operation')
    op.drop_table('queue_holiday')
    op.drop_index(op.f('ix_call_routing_sip_trunk'), table_name='call_routing')
    op.drop_index(op.f('ix_call_routing_phone_number'), table_name='call_routing')
    op.drop_table('call_routing')
    op.drop_table('api_credential')
    op.drop_table('admin_phone_number')
    op.drop_index(op.f('ix_workflow_workflow_name'), table_name='workflow')
    op.drop_table('workflow')
    op.drop_index(op.f('ix_step_run_name'), table_name='step_run')
    op.drop_index(op.f('ix_step_run_branch'), table_name='step_run')
    op.drop_table('step_run')
    op.drop_index(op.f('ix_queue_name'), table_name='queue')
    op.drop_table('queue')
    op.drop_table('greeting')
    op.drop_table('admin_user')
    op.drop_table('admin_call_to')
    op.drop_table('admin_call_from')
    # ### end Alembic commands ###
